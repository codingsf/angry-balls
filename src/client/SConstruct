AddOption('--debug-build',
          default = False,
          action = 'store_true',
          help = 'Build in debug mode.'
         )
debug_mode = GetOption('debug_build')

import os

project_root = os.path.abspath('../../')
build_subdir = 'debug' if debug_mode else 'release'

cpp_path = ['include/',
            'contrib/jsoncpp/include'
           ]
cpp_path = [os.path.join(project_root, x) for x in cpp_path]


cpp_flags = ['-Wall',
             '-std=c++11',
             '-stdlib=libc++',
             '-pthread'
            ]
if debug_mode:
    cpp_flags.append(['-g'])
else:
    cpp_flags.append(['-O2'])
compiler = 'clang++'


lib_path = ['lib/protocol',
            'lib/util',
            'src/strategies'
           ]
lib_path = [os.path.join(project_root, x) for x in lib_path]

env = Environment(CXX = compiler,
                  CPPFLAGS = cpp_flags,
                  CPPPATH = cpp_path,
                 )

for lib in lib_path:
    SConscript(os.path.join(lib, 'SConscript'),
               variant_dir = os.path.join(lib, build_subdir),
               exports = ['env']
              )


libs = ['libprotocol.a',
        'libstrategies.a',
        'libutil.a',
        'c++',
        'pthread'
        ]


# Adding build directories for debug/release cases
lib_path = [os.path.join(x, build_subdir) for x in lib_path]


env.Append(LIBS = libs,
           LIBPATH = lib_path
          )

SConscript('SConscript',
           variant_dir = build_subdir,
           exports = ['env']
          )
